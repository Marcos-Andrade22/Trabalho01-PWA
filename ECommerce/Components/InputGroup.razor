@using Microsoft.AspNetCore.Components.Forms
@using System.Linq.Expressions

<div class="mb-4">
    <label class="block text-sm text-gray-600 mb-1">@Label</label>
    <InputText Value="@Value" ValueChanged="ValueChanged" ValueExpression="FieldExpression" oninput="@OnInputChanged"
        class="w-full border-b border-gray-400 focus:outline-none focus:border-blue-700 transition duration-150" />
    <ValidationMessage For="@FieldExpression" />
</div>

@code {
    [Parameter]
    public string Label { get; set; }

    [Parameter]
    public string Value { get; set; }

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    [Parameter]
    public Expression<Func<string>> FieldExpression { get; set; }

    private async Task OnInputChanged(ChangeEventArgs e)
    {
        await ValueChanged.InvokeAsync(e.Value?.ToString());
    }
}
