@using ECommerce.Services;

@inject SnackbarService SnackbarService

@if (IsVisible)
{
    <div
        class="fixed top-5 left-1/2 transform -translate-x-1/2 transition-all duration-300 ease-in-out @SnackbarClass @SnackbarColor text-white px-6 py-3 rounded-lg shadow-lg">
        @Message
    </div>
}

@code {
    private string Message { get; set; }
    private bool IsVisible { get; set; }
    private bool IsError { get; set; }
    private int Duration { get; set; } = 3000;

    private string SnackbarClass => IsVisible ? "translate-y-0 opacity-100" : "translate-y-4 opacity-0";
    private string SnackbarColor => IsError ? "bg-red-500" : "bg-green-500";

    protected override void OnInitialized()
    {
        SnackbarService.OnShow += ShowSnackbar;
    }

    private async Task ShowSnackbar(string message, bool isError, int duration)
    {
        Message = message;
        IsError = isError;
        Duration = duration;

        IsVisible = true;
        StateHasChanged();

        await Task.Delay(Duration);

        IsVisible = false;
        StateHasChanged();
    }

    public void Dispose()
    {
        SnackbarService.OnShow -= ShowSnackbar;
    }
}
